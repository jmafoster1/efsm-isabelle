
@InCollection{	  foster.ea:efsm:2018,
  abstract	= {Model inference from system traces, e.g. for analysing
		  legacy components or generating security tests for
		  distributed components, is a common problem. Extended
		  Finite State Machine (EFSM) models, managing an internal
		  state as a set of registers, are particular well suited for
		  capturing the behaviour of stateful components however,
		  existing inference techniques for (E)FSMs lack the ability
		  to infer the internal state and its updates
		  functions.\\\\In this paper, we present a novel approach
		  for inferring EFSMs from system traces that also infers the
		  updates of the internal state. Our approach supports the
		  merging of transitions that update the internal data state.
		  Finally, our model is formalised in Isabelle/HOL, allowing
		  for the machine-checked verification of system properties.},
  address	= {Heidelberg},
  author	= {Michael Foster and Ramsay G. Taylor and Achim D. Brucker
		  and John Derrick},
  booktitle	= {ICFEM},
  doi		= {10.1007/978-3-030-02450-5},
  editor	= {Jin Song Dong and Jing Sun},
  isbn		= {978-3-030-02449-9},
  keywords	= {model inference, state machine models, EFSM},
  language	= {USenglish},
  location	= {Gold Coast, Australia},
  number	= {11232},
  pages		= {373--387},
  pdf		= {https://www.brucker.ch/bibliography/download/2018/foster.ea-efsm-2018.pdf},
  publisher	= {Springer-Verlag},
  series	= {Lecture Notes in Computer Science},
  title		= {Formalising Extended Finite State Machine Transition
		  Merging},
  url		= {https://www.brucker.ch/bibliography/abstract/foster.ea-efsm-2018},
  year		= {2018}
}

@InCollection{	  foster.ea:incorporating:2019,
  abstract	= {Models are an important way of understanding software
		  systems. If they do not already exist, then we need to
		  infer them from system behaviour. Most current approaches
		  infer classical FSM models that do not consider data, thus
		  limiting applicability. EFSMs provide a way to concisely
		  model systems with an internal state but existing inference
		  techniques either do not infer models which allow outputs
		  to be computed from inputs, or rely heavily on
		  comprehensive white-box traces that reveal the internal
		  program state, which are often unavailable.\\\\In this
		  paper, we present an approach for inferring EFSM models,
		  including functions that modify the internal state. Our
		  technique uses black-box traces which only contain
		  information visible to an external observer of the system.
		  We implemented our approach as a prototype.},
  address	= {Heidelberg},
  author	= {Michael Foster and Achim D. Brucker and Ramsay G. Taylor
		  and Siobh{\'a}n North and John Derrick},
  booktitle	= {Software Engineering and Formal Methods (SEFM)},
  doi		= {10.1007/978-3-030-30446-1_14},
  editor	= {Peter C. {\"O}lveczky and Gwen Sala{\"u}n},
  isbn		= {3-540-25109-X},
  keywords	= {EFSM Inference, Model Inference, Reverse Engineering},
  language	= {USenglish},
  location	= {Oslo},
  number	= {11724},
  pages		= {257--272},
  pdf		= {https://www.brucker.ch/bibliography/download/2019/foster.ea-incorporating-2019.pdf},
  publisher	= {Springer-Verlag},
  series	= {Lecture Notes in Computer Science},
  title		= {Incorporating Data into EFSM Inference},
  url		= {https://www.brucker.ch/bibliography/abstract/foster.ea-incorporating-2019},
  year		= {2019}
}
